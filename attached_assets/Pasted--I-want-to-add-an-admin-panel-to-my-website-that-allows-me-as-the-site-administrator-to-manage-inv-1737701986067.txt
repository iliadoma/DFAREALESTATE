"I want to add an admin panel to my website that allows me, as the site administrator, to manage investment opportunities. This panel should include functionality to add new investment objects, upload photos, attach files, add descriptions, and more. Hereâ€™s what I need:

1. Admin Panel Features
Authentication:

Add a secure login page for administrators.
Place the "Admin Login" button as a small, unobtrusive link at the bottom of the website.
Dashboard:

Create a dashboard with the following sections:
Add New Investment: A form to add new investment opportunities.
Manage Investments: A list of all existing investments with options to edit or delete them.
File Manager: A section to view and manage uploaded files (e.g., photos, documents).
Add New Investment Form:

Fields for real estate investments:
Name, location, size, price, expected ROI, category (e.g., core plus, value-add).
Fields for business investments:
Name, type of business, location, revenue, profit-sharing details.
Photo uploader: Allow multiple photo uploads.
File attachment: Allow uploading of PDF documents (e.g., brochures, financial reports).
Description: A rich-text editor for detailed descriptions.
Investment Categories:

Dropdowns or checkboxes for selecting the investment category (e.g., real estate or business).
Subcategories for real estate (e.g., new conservative, core plus).
Preview Feature:

Allow administrators to preview how the new investment will look on the main website before publishing.
2. Implementation Details
Frontend:

Build the admin panel UI using a framework like React.js or Vue.js.
Include a clean and intuitive design for easy navigation.
Add drag-and-drop functionality for uploading photos/files.
Backend:

Use Node.js with Express or Python with Flask/Django to handle admin panel actions.
Add API endpoints for:
Adding a new investment.
Editing or deleting an existing investment.
Uploading and managing files/photos.
Database:

Update the database schema to store additional investment details:
Name, location, size, ROI, type, category, photos, and file links.
Store admin credentials securely (e.g., hashed passwords).
File Storage:

Use cloud storage (e.g., AWS S3, Google Cloud Storage) or a local server to store uploaded photos and documents.
Generate and display preview URLs for uploaded files.
3. Security and Access Control
Admin Authentication:

Implement a secure authentication system using JWT or session-based authentication.
Enforce strong password policies for admin accounts.
Role-Based Access Control (Optional):

Add support for multiple admin roles with different permissions (e.g., read-only, editor, super admin).
4. User Experience Enhancements
Mobile-Friendly Design:
Ensure the admin panel is responsive and easy to use on mobile devices.
Error Handling:
Add clear error messages for failed actions (e.g., file upload failed, required field missing).
Confirmation Dialogs:
Include confirmation prompts for critical actions like deleting an investment.
5. Deliverables
A functional admin panel accessible via a small "Admin Login" button at the bottom of the main website.
Full CRUD (Create, Read, Update, Delete) functionality for managing investments.
File and photo upload capabilities with a preview option.
Secure admin authentication with proper access control.
Responsive and user-friendly design for easy navigation.
Please implement these features step by step, starting with the basic structure for the admin panel and expanding functionality incrementally."